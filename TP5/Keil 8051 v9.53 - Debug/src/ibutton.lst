C51 COMPILER V9.53.0.0   IBUTTON                                                           04/29/2019 13:12:49 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE IBUTTON
OBJECT MODULE PLACED IN .\src\ibutton.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe \\calebasse\2160
                    -9785\Bureau\TP Micro S2\MCU8bits_RepEtudiants\HO_TASEVSKI\TP5\src\ibutton.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WAR
                    -NINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(//calebasse/21609785/Bu
                    -reau/TP Micro S2/MCU8bits_RepEtudiants/HO_TASEVSKI/TP5/inc;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//
                    -Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/C8051F930;C:/SiliconLabs/Si
                    -mplicityStudio/v3/developer/sdks/si8051/v3//Device/C8051F930/inc) PRINT(.\src\ibutton.lst) COND PAGEWIDTH(120) PAGELENGT
                    -H(65) OBJECT(.\src\ibutton.OBJ)

line level    source

   1          //-----------------------------------------------------------------------------
   2          // Includes
   3          //-----------------------------------------------------------------------------
   4          #include <SI_C8051F930_Register_Enums.h>                // SFR declarations
   5          #include "one_wire_bus.h"
   6          #include "ibutton.h"
   7          #include "one_wire_bus_port.h"
   8          
   9          //-----------------------------------------------------------------------------
  10          // test_CRC()
  11          //
  12          // test du CRC ibutton
  13          // paramètre sortant = 1 si le test du CRC est correct (sinon 0)
  14          //-----------------------------------------------------------------------------
  15          static bit test_CRC(uint8_t table_IBUTTON[8]){
  16   1              uint8_t i,j,k,n,crc=0;
  17   1              for(k=0;k<7;k++)
  18   1                      for(i=1,j=0;j<8;i=i*2,j++){
  19   2                                n=(( (table_IBUTTON[k]&i)>>j)^crc)&1;
  20   2                                if(n==1)   { crc=crc^0X18;crc=crc>>1;crc+=128;}
  21   2                                else           { crc=crc>>1;}
  22   2                  }
  23   1              if(crc==table_IBUTTON[7])   return(1);
  24   1              else                                            return(0);
  25   1      }
  26          
  27          //-----------------------------------------------------------------------------
  28          // reset_IBUTTON()
  29          //
  30          // paramètre sortant = 1 si un ibutton est présent (sinon 0)
  31          //-----------------------------------------------------------------------------
  32          bit reset_IBUTTON(void) {
  33   1      
  34   1              if(reset_line()==0) return 1;           // la fonction reset_line() est à écrire dans la couche one_wire_bus !
  35   1              else return 0;
  36   1      }
  37          
  38          //-----------------------------------------------------------------------------
  39          // lecture_ID()
  40          //
  41          // paramètre entrant = tableau à remplir avec l'ID du ibutton
  42          // paramètre sortant = 1 si lecture d'un ID sans problème
  43          //                                       = 0 si pas de ibutton ou si erreur de CRC
  44          //-----------------------------------------------------------------------------
  45          bit lecture_ID(uint8_t table_IBUTTON[8]){
  46   1      
  47   1               uint8_t i;
  48   1               if(reset_IBUTTON()){    // verifier reset
  49   2                 write_Byte(0x33);
  50   2                 for(i =0;i<8;i++)  table_IBUTTON[i] = read_Byte();
C51 COMPILER V9.53.0.0   IBUTTON                                                           04/29/2019 13:12:49 PAGE 2   

  51   2                 if(test_CRC(table_IBUTTON)) return 1;
  52   2                 else return 0;
  53   2          }else return 0;
  54   1      }
  55          
  56          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    167    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
